# Реализуйте класс Matrix. Он должен содержать:
#
#  Конструктор от списка списков.
#  Гарантируется, что списки состоят из чисел, не пусты и все имеют одинаковый размер.
#  Конструктор должен копировать содержимое списка списков, т. е.
#  при изменении списков, от которых была сконструирована матрица, содержимое матрицы изменяться не должно.
#  Метод __str__, переводящий матрицу в строку.
#  При этом элементы внутри одной строки должны быть разделены знаками табуляции, а строки  —  переносами строк.
#  После каждой строки не должно быть символа табуляции и в конце не должно быть переноса строки.
#  Метод size без аргументов, возвращающий кортеж вида (число строк, число столбцов).
# На проверку вы должны сдать только файл,
# содержащий описание класса и одну строку вне класса (в качестве основной программы): exec(stdin.read())
# И еще одну строку в начале файла: from sys import stdin


from sys import stdin


class Matrix:
    # Конструктор от списка списков
    def __init__(self, m):
        self.input_list = [line.copy() for line in m]

    def __str__(self):
        st = ''
        # Проходим по каждому i-ому кортежу
        for i in range(len(self.input_list)):
            # И каждому j-ому кортежу из каждого i-того кортежа
            for j in range(len(self.input_list[i])):
                # Если кортеж в списке кортежей не 1
                if j != len(self.input_list[i]) - 1:
                    # То кортежи внутри кортежа разделяем знаками табуляции
                    st += str(self.input_list[i][j]) + '\t'
                else:
                    st += str(self.input_list[i][j])
            # Если кортеж с кортежами не 1
            # То разделяем их знаками переноса на новую строку
            if i != len(self.input_list) - 1:
                st += '\n'
        return st

    def size(self):
        # Size возвращает кортеж вида (число строк, число столбцов)
        # В нашем случае кол-во кортежей и кол-во кортежей в каждом кортеже
        return len(self.input_list), len(self.input_list[0])


exec(stdin.read())
